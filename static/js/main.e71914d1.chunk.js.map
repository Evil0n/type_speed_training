{"version":3,"sources":["App.module.scss","useSpeedTraining/useHandle.js","useSpeedTraining/index.js","useSpeedTraining/useText.js","useSpeedTraining/useStatistic.js","useSpeedTraining/useControlsMemo.js","useSpeedTraining/usePointerClass.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","interval","useSpeedTraining","useState","successChr","setSuccessChr","isStarted","setIsStarted","timer","setTimer","pointerErrors","setPointersErrors","pointer","setPointer","fullText","setFullText","setters","text","successText","useMemo","slice","restText","length","pointerText","useEffect","fetch","then","result","json","full","success","rest","useText","statistic","typeSpeed","time","toFixed","accuracy","useStatistic","keyBoardListener","useCallback","e","key","prevPointer","errors","Set","handlePause","clearInterval","window","removeEventListener","handleStop","handleStart","setInterval","addEventListener","stop","pause","start","useHandle","toggle","btnText","useControlsMemo","pointerClasses","classes","styles","Text__pointer","push","Text__pointer_error","cn","usePointerClass","controls","Content","Header","Footer","App","className","Layout","direction","Text","Text__success","onClick","gutter","span","title","value","suffix","style","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e71914d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"App_Layout__PvsOC\",\"Header\":\"App_Header__GaTBK\",\"Content\":\"App_Content__LFMSe\",\"Text\":\"App_Text__DCud9\",\"Text__success\":\"App_Text__success__30f0-\",\"Text__pointer\":\"App_Text__pointer__1r_np\",\"Text__pointer_error\":\"App_Text__pointer_error__2fnJT\"};","import { useCallback } from 'react'\n\nlet interval\n\nexport function useHandle (text, setters) {\n  const {\n    setIsStarted,\n    setPointer,\n    setPointersErrors,\n    setSuccessChr,\n    setTimer,\n  } = setters\n  const keyBoardListener = useCallback((e) => {\n    if (e.key.length !== 1) { return }\n    setPointer(prevPointer => {\n      const success = e.key === text[prevPointer]\n      setSuccessChr(success)\n      if (success) {\n        return ++prevPointer\n      }\n      setPointersErrors((errors) => {\n\n        return [...new Set([...errors, prevPointer])]\n      })\n      return prevPointer\n    })\n  }, [setPointer, text])\n\n  const handlePause = useCallback(\n    () => {\n      clearInterval(interval)\n      window.removeEventListener('keydown', keyBoardListener)\n      setIsStarted(false)\n    },\n    [keyBoardListener, setIsStarted])\n  const handleStop = useCallback(() => {\n    handlePause()\n    setPointer(0)\n    setSuccessChr(true)\n    setPointersErrors([])\n    setTimer(0)\n  }, [\n    handlePause,\n    setPointer,\n    setSuccessChr,\n    setPointersErrors,\n    setTimer])\n  const handleStart = useCallback(\n    () => {\n      handlePause()\n      setIsStarted(true)\n      interval = setInterval(() => {\n        setTimer((timer) => {\n          return ++timer\n        })\n      }, 1000)\n      window.addEventListener('keydown', keyBoardListener)\n    }, [handlePause, keyBoardListener, setIsStarted])\n\n  return {\n    stop: handleStop,\n    pause: handlePause,\n    start: handleStart,\n  }\n}\n","import { useText } from './useText'\nimport { useState, useEffect } from 'react'\nimport { useHandle } from './useHandle'\nimport { useStatistic } from './useStatistic'\nimport { useControlsMemo } from './useControlsMemo'\nimport { usePointerClass } from './usePointerClass'\n\nexport function useSpeedTraining () {\n  const [successChr, setSuccessChr] = useState(true)\n  const [isStarted, setIsStarted] = useState(false)\n  const [timer, setTimer] = useState(0)\n  const [pointerErrors, setPointersErrors] = useState([])\n  const [pointer, setPointer] = useState(0)\n  const [fullText, setFullText] = useState('')\n\n  const setters = {\n    setIsStarted,\n    setPointer,\n    setPointersErrors,\n    setSuccessChr,\n    setTimer,\n  }\n\n  const text = useText(pointer, fullText, setFullText, isStarted)\n  const statistic = useStatistic(text, timer, pointerErrors)\n  const {start, pause, stop} = useHandle(fullText, setters)\n  const {toggle, btnText} = useControlsMemo(isStarted, start, pause)\n  const pointerClasses = usePointerClass(successChr)\n\n  useEffect(() => {\n    if (pointer >= text.length) {\n      pause()\n    }\n  }, [text, pause, pointer])\n\n  useEffect(() => {\n    return () => pause()\n  }, [])\n\n  return {\n    text,\n    pointerClasses,\n    controls: {\n      toggle,\n      stop,\n      btnText,\n    },\n    statistic,\n  }\n}\n","import { useEffect, useMemo } from 'react'\n\nexport function useText (pointer, fullText, setFullText ) {\n  const successText = useMemo(() => fullText.slice(0,\n    pointer), [fullText, pointer])\n  const restText = useMemo(() => fullText.slice(pointer + 1, fullText.length),\n    [fullText, pointer])\n\n  const pointerText = useMemo(() => fullText[pointer], [fullText, pointer])\n\n  useEffect(() => {\n    fetch('https://fish-text.ru/get')\n      .then((result) => result.json())\n      .then((result) => {\n        setFullText(result.text)\n      })\n  }, [])\n  return {\n    full: fullText,\n    pointer: pointerText,\n    success: successText,\n    rest: restText,\n  }\n}\n","import { useMemo } from 'react'\n\nexport function useStatistic (text, timer, pointerErrors) {\n  const typeSpeed = useMemo(() => {\n    const time = timer || 1\n    return ((text.success.length / time) * 60).toFixed(0)\n  }, [timer, text.success])\n  const accuracy = useMemo(() => {\n    return ((1 - (pointerErrors.length / text.full.length)) * 100).toFixed(1)\n  }, [pointerErrors, text.full])\n\n  return {\n    accuracy,\n    typeSpeed,\n    timer\n  }\n}\n","import { useMemo } from 'react'\n\nexport function useControlsMemo (isStarted, handleStart, handlePause) {\n  const handleToggle = useMemo(() => {\n    return isStarted ? handlePause : handleStart\n  }, [handleStart, handlePause, isStarted])\n\n  const btnText = useMemo(() => {\n    return isStarted ? 'Пауза' : 'Старт'\n  }, [isStarted])\n\n  return {\n    toggle: handleToggle,\n    btnText,\n  }\n}\n","import styles from '../App.module.scss'\nimport cn from 'classnames'\nimport {useMemo} from 'react'\n\nexport function usePointerClass (successChr) {\n  return useMemo(() => {\n    const classes = [\n      styles.Text__pointer,\n    ]\n    if (!successChr) {\n      classes.push(styles.Text__pointer_error)\n    }\n    return cn(classes)\n  }, [successChr])\n}\n","import React from 'react'\nimport styles from './App.module.scss'\nimport { Layout, Space, Statistic, Row, Col } from 'antd'\nimport { useSpeedTraining } from './useSpeedTraining'\n\nconst {Content, Header, Footer} = Layout\n\nfunction App () {\n  const {\n    text,\n    pointerClasses,\n    controls,\n    statistic,\n  } = useSpeedTraining()\n  return (\n    <Layout className={styles.Layout}>\n      <Header><h1 className={styles.Header}>Тренажер печати</h1>\n      </Header>\n      <Content className={styles.Content}>\n        <Space direction=\"vertical\">\n          <div className={styles.Text}>\n            <span className={styles.Text__success}>{text.success}</span><span\n            className={pointerClasses}>{text.pointer}</span><span>{text.rest}</span>\n          </div>\n          <Space>\n            <div className=\"ant-btn\" onClick={controls.toggle}>{controls.btnText}</div>\n            <div className=\"ant-btn\" onClick={controls.stop}>Стоп</div>\n          </Space>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Statistic title=\"Прошло времени\" value={statistic.timer} suffix=\"сек\"/>\n            </Col>\n            <Col span={12}>\n              <Statistic title=\"Скорость вашей печати\" value={statistic.typeSpeed}\n                         suffix=\"символов в минуту\"/>\n            </Col>\n            <Col span={24} style={{marginTop: 32}}>\n              <Statistic title=\"Аккуратность\" value={statistic.accuracy} suffix=\"%\"/>\n            </Col>\n          </Row>\n        </Space>\n      </Content>\n      <Footer>Evil0n &copy; 2021</Footer>\n    </Layout>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}