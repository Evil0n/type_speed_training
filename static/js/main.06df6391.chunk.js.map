{"version":3,"sources":["App.module.scss","App.js","reportWebVitals.js","index.js"],"names":["module","exports","interval","Content","Layout","Header","Footer","App","useState","text","setText","pointer","setPointer","successChr","setSuccessChr","timer","setTimer","pointerErrors","setPointersErrors","isStarted","setIsStarted","successText","useMemo","slice","pointerText","restText","length","pointerClasses","classes","styles","Text__pointer","push","Text__pointer_error","cn","typeSpeed","time","toFixed","accuracy","keyBoardListener","useCallback","e","key","prevPointer","success","errors","Set","handlePause","clearInterval","window","removeEventListener","handleStop","handleStart","setInterval","addEventListener","handleToggle","btnText","useEffect","console","log","fetch","then","result","json","className","direction","Text","Text__success","onClick","gutter","span","title","value","suffix","style","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06df6391.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"App_Layout__PvsOC\",\"Header\":\"App_Header__GaTBK\",\"Content\":\"App_Content__LFMSe\",\"Text\":\"App_Text__DCud9\",\"Text__success\":\"App_Text__success__30f0-\",\"Text__pointer\":\"App_Text__pointer__1r_np\",\"Text__pointer_error\":\"App_Text__pointer_error__2fnJT\"};","import styles from './App.module.scss'\nimport { useState, useEffect, useMemo, useCallback } from 'react'\nimport cn from 'classnames'\nimport { Layout, Button, Space, Statistic, Row, Col } from 'antd'\n\nconst {Content, Header, Footer} = Layout\n\nlet interval\n\nfunction App () {\n  const [text, setText] = useState('')\n  const [pointer, setPointer] = useState(0)\n  const [successChr, setSuccessChr] = useState(true)\n  const [timer, setTimer] = useState(0)\n  const [pointerErrors, setPointersErrors] = useState([])\n  const [isStarted, setIsStarted] = useState(false)\n\n  const successText = useMemo(() => text.slice(0,\n    pointer), [text, pointer])\n  const pointerText = useMemo(() => text[pointer], [text, pointer])\n  const restText = useMemo(() => text.slice(pointer + 1, text.length),\n    [text, pointer])\n  const pointerClasses = useMemo(() => {\n    const classes = [\n      styles.Text__pointer,\n    ]\n    if (!successChr) {\n      classes.push(styles.Text__pointer_error)\n    }\n    return cn(classes)\n  }, [successChr])\n  const typeSpeed = useMemo(() => {\n    const time = timer || 1\n    return ((successText.length / time) * 60).toFixed(0)\n  }, [timer, successText])\n  const accuracy = useMemo(() => {\n    return ((1 - (pointerErrors.length / text.length)) * 100).toFixed(1)\n  }, [pointerErrors, text])\n\n  const keyBoardListener = useCallback((e) => {\n    if (e.key.length !== 1) { return }\n    setPointer(prevPointer => {\n      const success = e.key === text[prevPointer]\n      setSuccessChr(success)\n      if (success) {\n        return ++prevPointer\n      }\n      setPointersErrors((errors) => {\n\n        return [...new Set([...errors, prevPointer])]\n      })\n      return prevPointer\n    })\n  }, [setPointer, text])\n\n  const handlePause = useCallback(\n    () => {\n      clearInterval(interval)\n      window.removeEventListener('keydown', keyBoardListener)\n      setIsStarted(false)\n    },\n    [keyBoardListener, setIsStarted])\n  const handleStop = useCallback(() => {\n    handlePause()\n    setPointer(0)\n    setSuccessChr(true)\n    setPointersErrors([])\n    setTimer(0)\n  }, [\n    handlePause,\n    setPointer,\n    setSuccessChr,\n    setPointersErrors,\n    setTimer])\n  const handleStart = useCallback(\n    () => {\n      handlePause()\n      setIsStarted(true)\n      interval = setInterval(() => {\n        setTimer((timer) => {\n          return ++timer\n        })\n      }, 1000)\n      window.addEventListener('keydown', keyBoardListener)\n    }, [handlePause, keyBoardListener, setIsStarted])\n  const handleToggle = useMemo(() => {\n    return isStarted?handlePause:handleStart\n  },[handleStart,handlePause,isStarted])\n  const btnText = useMemo(() => {\n    return isStarted?'Пауза':'Старт'\n  },[isStarted])\n\n  useEffect(() => {\n    if (pointer >= text.length) {\n      handlePause()\n    }\n    console.log(pointer, text.length)\n  }, [text, handlePause, pointer])\n\n  useEffect(() => {\n    return () => handlePause()\n  }, [])\n\n  useEffect(() => {\n    fetch('https://fish-text.ru/get')\n      .then((result) => result.json())\n      .then((result) => {\n        setText(result.text)\n      })\n  }, [])\n\n  return (\n    <Layout className={styles.Layout}>\n      <Header><h1 className={styles.Header}>Тренажер печати</h1>\n      </Header>\n      <Content className={styles.Content}>\n        <Space direction='vertical'>\n          <div className={styles.Text}>\n            <span className={styles.Text__success}>{successText}</span><span\n            className={pointerClasses}>{pointerText}</span><span>{restText}</span>\n          </div>\n          <Space>\n            <Button onClick={handleToggle}>{btnText}</Button>\n            <Button onClick={handleStop}>Стоп</Button>\n          </Space>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Statistic title=\"Прошло времени\" value={timer} suffix='сек'/>\n            </Col>\n            <Col span={12}>\n              <Statistic title=\"Скорость вашей печати\" value={typeSpeed}\n                         suffix='символов в минуту'/>\n            </Col>\n            <Col span={24} style={{marginTop: 32}}>\n              <Statistic title=\"Аккуратность\" value={accuracy} suffix='%'/>\n            </Col>\n          </Row>\n        </Space>\n      </Content>\n      <Footer>Evil0n &copy; 2021</Footer>\n    </Layout>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}